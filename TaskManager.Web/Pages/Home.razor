@using Domain.Enums
@using Domain.Model
@using TaskManager.Web.Components

@page "/"

<PageTitle>Home</PageTitle>

<div class="container py-4">
    <CreateTaskModal @ref="ModalRef" OnTaskCreated="AddTask" />
    <ViewTaskModal @ref="ViewModal" CurrentUser="CurrentUser" OnTaskUpdated="SaveTask" OnTaskDeleted="DeleteTask" />
    <!-- Filters -->
    <div class="row mb-3">
        <div class="col-md-3">
            <label>Пользователь</label>
            <select class="form-select" @bind="FilterUser">
                <option value="">-- Все пользователи --</option>
                @foreach (var user in AllUsers)
                {
                    <option value="@user.Id">@user.Name</option>
                }
            </select>
        </div>

        <div class="col-md-3">
            <label>Создана от</label>
            <input class="form-control" type="date" @bind="CreatedFrom"/>
        </div>

        <div class="col-md-3">
            <label>Создана до</label>
            <input class="form-control" type="date" @bind="CreatedTo"/>
        </div>

        <div class="col-md-3">
            <label>Завершена от</label>
            <input class="form-control" type="date" @bind="ClosedFrom"/>
        </div>

        <div class="col-md-3 mt-2">
            <label>Завершена до</label>
            <input class="form-control" type="date" @bind="ClosedTo"/>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-md-3">
            <button class="btn btn-primary" @onclick="() => ModalRef.Show()">+ New Task</button>
        </div>
    </div>

    <div class="row">
        @foreach (var status in Enum.GetValues(typeof(StatusTask)))
        {
            <Dropzone AllowsDrag="((x) => x.CreatedByUserId == CurrentUser.Id)" Items="FilteredTasks.Where(x => x.Status == (StatusTask)status).ToList()" TItem="TaskItem" OnItemDrop="@((i)=>OnDrop(i, (StatusTask)status))" Class="col-md-4 drop-zone border rounded p-2">
                <ChildContent>
                    <div class="card task-card mb-3" @onclick="() => OpenViewModal(context)">
                        <div class="card-body">
                            <h5 class="card-title">@context.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@(AllUsers.FirstOrDefault(x => x.Id == context.CreatedByUserId)?.Name ?? context.CreatedByUserId.ToString())</h6>
                            <p class="card-text">@context.Description</p>
                            <span class="badge bg-secondary">@context.Status</span>
                            <p class="mt-2 small text-muted">Created: @context.CreatedAt.ToShortDateString()</p>
                        </div>
                    </div>
                </ChildContent>
            </Dropzone>
        }
    </div>
</div>